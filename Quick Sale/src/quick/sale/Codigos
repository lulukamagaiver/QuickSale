<provider>org.hibernate.ejb.HibernatePersistence</provider>
<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>


private EntityManager getEntityManager() {
    EntityManagerFactory factory = null ;
    EntityManager entityManager = null;
    try {
      //Obtém o factory a partir da unidade de persistência.
      factory = Persistence.createEntityManagerFactory("Quick_SalePU");
      //Cria um entity manager.
      entityManager = factory.createEntityManager();
      //Fecha o factory para liberar os recursos utilizado.
    } finally {
      factory.close();
    }
    return entityManager;
  }

  /**
   * Método utilizado para salvar ou atualizar as informações de um clifor.
   * @param clifor
   * @return
   * @throws java.lang.Exception
   */
  public CliFor salvar(CliFor clifor) throws Exception {
    //EntityManager entityManager = getEntityManager();
    try {
      
      // Inicia uma transação com o banco de dados.
      getEntityManager().getTransaction().begin();
      System.out.println("Salvando a pessoa.");
      // Verifica se a pessoa ainda não está salva no banco de dados.
      if(clifor.getId() == null) {
        //Salva os dados da pessoa.
        getEntityManager().persist(clifor);
      } else {
        //Atualiza os dados da pessoa.
        clifor = getEntityManager().merge(clifor);
      }
      // Finaliza a transação.
      getEntityManager().getTransaction().commit();
    } finally {
      getEntityManager().close();
    }
    return clifor;
  }

  /**
   * Método que apaga clifor do banco de dados.
   * @param id
   */
  public void excluir(Long id) {
    EntityManager entityManager = getEntityManager();
    try {
      // Inicia uma transação com o banco de dados.
      entityManager.getTransaction().begin();
      // Consulta a pessoa na base de dados através do seu ID.
      CliFor clifor = entityManager.find(CliFor.class, id);
      System.out.println("Excluindo os dados de: " + clifor.getNomeFantasia());
      // Remove a pessoa da base de dados.
      entityManager.remove(clifor);
      // Finaliza a transação.
      entityManager.getTransaction().commit();
    } finally {
      entityManager.close();
    }
  }

  /**
   * Consulta o clifor pelo ID.
   * @param id
   * @return o objeto Pessoa.
   */
  public CliFor consultarPorId(Long id) {
    EntityManager entityManager = getEntityManager();
    CliFor clifor = null;
    try {
      //Consulta uma pessoa pelo seu ID.
      clifor = entityManager.find(CliFor.class, id);
    } finally {
      entityManager.close();
    }
    return clifor;
  }